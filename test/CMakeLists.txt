add_executable(array EXCLUDE_FROM_ALL array.cpp)
add_executable(vector EXCLUDE_FROM_ALL vector.cpp)
add_executable(list EXCLUDE_FROM_ALL list.cpp)
add_executable(deque EXCLUDE_FROM_ALL deque.cpp)
add_executable(queue EXCLUDE_FROM_ALL queue.cpp)
add_executable(stack EXCLUDE_FROM_ALL stack.cpp)
add_executable(heap EXCLUDE_FROM_ALL heap.cpp)
add_executable(priority_queue EXCLUDE_FROM_ALL priority_queue.cpp)
add_executable(tree_map EXCLUDE_FROM_ALL tree_map.cpp)
add_executable(hash_map EXCLUDE_FROM_ALL hash_map.cpp)

add_executable(sort EXCLUDE_FROM_ALL algorithm/sort.c)

add_executable(spsc_queue EXCLUDE_FROM_ALL lockfree/spsc_queue.cpp)
add_executable(mpmc_queue EXCLUDE_FROM_ALL lockfree/mpmc_queue.cpp)

if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    add_executable(lockfree_queue EXCLUDE_FROM_ALL lockfree/queue.cpp)
    add_executable(lockfree_stack EXCLUDE_FROM_ALL lockfree/stack.cpp)
    add_custom_target(check DEPENDS array deque hash_map heap list priority_queue queue stack tree_map vector sort spsc_queue mpmc_queue lockfree_queue lockfree_stack)
else()
    add_custom_target(check DEPENDS array deque hash_map heap list priority_queue queue stack tree_map vector sort spsc_queue mpmc_queue)
endif()

if(UNIX OR APPLE)
    set(target_lib CTL GTest::gtest)
elseif(WIN32)
    set(target_lib CTL GTest::gtest)
endif()

target_link_libraries(array ${target_lib})
target_link_libraries(vector ${target_lib})
target_link_libraries(list ${target_lib})
target_link_libraries(deque ${target_lib})
target_link_libraries(queue ${target_lib})
target_link_libraries(stack ${target_lib})
target_link_libraries(heap ${target_lib})
target_link_libraries(priority_queue ${target_lib})
target_link_libraries(tree_map ${target_lib})
target_link_libraries(hash_map ${target_lib})
target_link_libraries(sort ${target_lib})
target_link_libraries(spsc_queue ${target_lib})
target_link_libraries(mpmc_queue ${target_lib})

if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    target_link_libraries(lockfree_queue ${target_lib})
    target_link_libraries(lockfree_stack ${target_lib})
endif()

add_test(NAME array COMMAND array)
add_test(NAME vector COMMAND vector)
add_test(NAME deque COMMAND deque)
add_test(NAME hash_map COMMAND hash_map)
add_test(NAME heap COMMAND heap)
add_test(NAME list COMMAND list)
add_test(NAME priority_queue COMMAND priority_queue)
add_test(NAME queue COMMAND queue)
add_test(NAME stack COMMAND stack)
add_test(NAME tree_map COMMAND tree_map)
add_test(NAME sort COMMAND sort)
add_test(NAME spsc_queue COMMAND spsc_queue)
add_test(NAME mpmc_queue COMMAND mpmc_queue)

if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    add_test(NAME lockfree_queue COMMAND lockfree_queue)
    add_test(NAME lockfree_stack COMMAND lockfree_stack)
endif()