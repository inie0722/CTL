add_subdirectory(algorithm)

add_executable(array EXCLUDE_FROM_ALL  array.cpp)
add_executable(vector EXCLUDE_FROM_ALL  vector.cpp)
add_executable(list EXCLUDE_FROM_ALL  list.cpp)
add_executable(deque EXCLUDE_FROM_ALL  deque.cpp)
add_executable(queue EXCLUDE_FROM_ALL  queue.cpp)
add_executable(stack EXCLUDE_FROM_ALL  stack.cpp)
add_executable(heap EXCLUDE_FROM_ALL  heap.cpp)
add_executable(priority_queue EXCLUDE_FROM_ALL  priority_queue.cpp)
add_executable(tree_map EXCLUDE_FROM_ALL  tree_map.cpp)
add_executable(hash_map EXCLUDE_FROM_ALL  hash_map.cpp)

add_custom_target(check DEPENDS array deque hash_map heap list priority_queue queue stack tree_map vector sort)

if(UNIX OR APPLE)
    set(target_lib CTL GTest::gtest pthread)
elseif(WIN32)
    set(target_lib CTL GTest::gtest)
endif()

target_link_libraries(array ${target_lib})
target_link_libraries(vector ${target_lib})
target_link_libraries(list ${target_lib})
target_link_libraries(deque ${target_lib})
target_link_libraries(queue ${target_lib})
target_link_libraries(stack ${target_lib})
target_link_libraries(heap ${target_lib})
target_link_libraries(priority_queue ${target_lib})
target_link_libraries(tree_map ${target_lib})
target_link_libraries(hash_map ${target_lib})

add_test(NAME array COMMAND array)
add_test(NAME vector COMMAND vector)
add_test(NAME deque COMMAND deque)
add_test(NAME hash_map COMMAND hash_map)
add_test(NAME heap COMMAND heap)
add_test(NAME list COMMAND list)
add_test(NAME priority_queue COMMAND priority_queue)
add_test(NAME queue COMMAND queue)
add_test(NAME stack COMMAND stack)
add_test(NAME tree_map COMMAND tree_map)
add_test(NAME sort COMMAND sort)